// Mocks generated by Mockito 5.4.4 from annotations
// in peerpal/test/chatv2/domain/usecases/send_request_response_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:peerpal/chatv2/domain/enums/message_type.dart' as _i6;
import 'package:peerpal/chatv2/domain/models/chat.dart' as _i4;
import 'package:peerpal/chatv2/domain/models/chat_message.dart' as _i5;
import 'package:peerpal/chatv2/domain/repositorys/chat_repository.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ChatRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatRepository extends _i1.Mock implements _i2.ChatRepository {
  MockChatRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<List<_i4.Chat>> chatsStream(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #allChatsStream,
          [userId],
        ),
        returnValue: _i3.Stream<List<_i4.Chat>>.empty(),
      ) as _i3.Stream<List<_i4.Chat>>);

  @override
  _i3.Stream<List<_i5.ChatMessage>> messageStream(String? chatId) =>
      (super.noSuchMethod(
        Invocation.method(
          #messageStream,
          [chatId],
        ),
        returnValue: _i3.Stream<List<_i5.ChatMessage>>.empty(),
      ) as _i3.Stream<List<_i5.ChatMessage>>);

  @override
  _i3.Stream<int> messageCountStream(String? chatId) => (super.noSuchMethod(
        Invocation.method(
          #messageCountStream,
          [chatId],
        ),
        returnValue: _i3.Stream<int>.empty(),
      ) as _i3.Stream<int>);

  @override
  _i3.Future<void> sendMessage(
    String? senderId,
    String? chatId,
    String? payload,
    _i6.MessageType? messageType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [
            senderId,
            chatId,
            payload,
            messageType,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> sendChatRequestResponse(
    String? partnerId,
    bool? response,
    String? chatId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendChatRequestResponse,
          [
            partnerId,
            response,
            chatId,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
